{"ast":null,"code":"var _jsxFileName = \"/home/francis/DH/primer-entregable-frontend-3/src/components/Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(_ref) {\n  _s();\n\n  let {\n    item,\n    carrito,\n    setCarrito\n  } = _ref;\n  const [cantidad, setCantidadItem] = useState(item.stock);\n\n  const comprar = () => {\n    setCantidadItem(cantidad - 1);\n    setCarrito({\n      stock: carrito.stock + 1\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: item.producto.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.producto.descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En Stock: \", cantidad > 0 ? cantidad : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"agotado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this), cantidad > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: comprar,\n      children: \"COMPRAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      children: \"SIN STOCK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"WMfx1nsN+xrbGimMOd59U6TgAoU=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","useState","Item","item","carrito","setCarrito","cantidad","setCantidadItem","stock","comprar","producto","nombre","descripcion"],"sources":["/home/francis/DH/primer-entregable-frontend-3/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\nimport React, { useState } from 'react'\r\n\r\nexport default function Item({item, carrito, setCarrito}) {\r\n\r\n\r\n  const [cantidad, setCantidadItem] = useState(item.stock)\r\n\r\n  const comprar = () =>{\r\n      setCantidadItem(cantidad - 1)\r\n      setCarrito({\r\n          stock: carrito.stock + 1\r\n      })\r\n  }\r\n  return (\r\n    <div className='producto'>\r\n       <h3>{item.producto.nombre}</h3>\r\n       <p>{item.producto.descripcion}</p>\r\n       <h5>En Stock: {cantidad > 0 ? cantidad : <span>agotado</span>}</h5>\r\n        {cantidad > 0 ? \r\n            <button onClick={comprar}>\r\n                COMPRAR\r\n            </button> \r\n            : \r\n            <button disabled>\r\n                SIN STOCK\r\n            </button>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,IAAT,OAA2C;EAAA;;EAAA,IAA7B;IAACC,IAAD;IAAOC,OAAP;IAAgBC;EAAhB,CAA6B;EAGxD,MAAM,CAACC,QAAD,EAAWC,eAAX,IAA8BN,QAAQ,CAACE,IAAI,CAACK,KAAN,CAA5C;;EAEA,MAAMC,OAAO,GAAG,MAAK;IACjBF,eAAe,CAACD,QAAQ,GAAG,CAAZ,CAAf;IACAD,UAAU,CAAC;MACPG,KAAK,EAAEJ,OAAO,CAACI,KAAR,GAAgB;IADhB,CAAD,CAAV;EAGH,CALD;;EAMA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACG;MAAA,UAAKL,IAAI,CAACO,QAAL,CAAcC;IAAnB;MAAA;MAAA;MAAA;IAAA,QADH,eAEG;MAAA,UAAIR,IAAI,CAACO,QAAL,CAAcE;IAAlB;MAAA;MAAA;MAAA;IAAA,QAFH,eAGG;MAAA,yBAAeN,QAAQ,GAAG,CAAX,GAAeA,QAAf,gBAA0B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAzC;IAAA;MAAA;MAAA;MAAA;IAAA,QAHH,EAIKA,QAAQ,GAAG,CAAX,gBACG;MAAQ,OAAO,EAAEG,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,gBAKG;MAAQ,QAAQ,MAAhB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATR;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GA3BuBP,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}